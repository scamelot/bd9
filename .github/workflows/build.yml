name: Build, Release, and Homebrew

on:
  push:
    branches:
      - main 

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            arch: x86_64
            platform: linux
            extension: tar.gz
          - os: windows-latest
            arch: x86_64
            platform: win
            extension: zip
          - os: macos-latest
            arch: arm64
            platform: darwin
            extension: tar.gz
          - os: macos-latest
            arch: universal2
            platform: darwin
            extension: tar.gz

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip

    - name: Install PyInstaller
      run: |
        pip install pyinstaller

    - name: Build binary with PyInstaller
      run: |
        pyinstaller --onefile --name bd9-${{ matrix.platform }}-${{ matrix.arch }} --distpath dist --clean bd9.py

    - name: Compress binary
      shell: bash
      run: |
        cd dist
        if [ "${{ matrix.extension }}" == "zip" ]; then
          powershell -Command "Compress-Archive -Path 'bd9-${{ matrix.platform }}-${{ matrix.arch }}*' -DestinationPath '../bd9-${{ matrix.platform }}-${{ matrix.arch }}.zip'"
        else
          tar czvf ../bd9-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz bd9-${{ matrix.platform }}-${{ matrix.arch }}*
        fi

    - name: Upload binaries as artifacts
      uses: actions/upload-artifact@v2
      with:
        name: bd9-${{ matrix.platform }}-${{ matrix.arch }}
        path: |
          bd9-${{ matrix.platform }}-${{ matrix.arch }}.${{ matrix.extension }}

  release:
    needs: [build]
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download all artifacts
      uses: actions/download-artifact@v2
      with:
        path: artifacts

    - name: Install GitHub CLI
      run: |
        sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key 23F3D4EA75716059
        sudo apt-add-repository https://cli.github.com/packages
        sudo apt update
        sudo apt install gh

    - name: Configure GitHub CLI
      run: |
        gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"

    - name: Create GitHub Release
      run: |
        version=$(git describe --tags --abbrev=0)
        gh release create $version -t "Release $version" -n "Release $version" artifacts/*

    - name: Calculate SHA256 sums
      run: |
        echo "shasums:" >> shas
        for file in artifacts/*; do
          sha256sum=$(sha256sum "$file" | awk '{print $1}')
          echo "${file##*/}: $sha256sum" >> shasums.txt
        done

    - name: Create Homebrew Formula
      run: |
        if [ "$(uname)" = "Darwin" ]; then
          binary_url="https://github.com/scamelot/bd9/releases/download/$version/bd9-darwin-x86_64.tar.gz"
          sha256sum=$(grep 'darwin-universal.tar.gz:' shasums.txt | awk '{print $2}')
        else
          binary_url="https://github.com/scamelot/bd9/releases/download/$version/bd9-linux-x86_64.tar.gz"
          sha256sum=$(grep 'linux-x86_64.tar.gz:' shasums.txt | awk '{print $2}')
        fi

        cat << EOF > bd9.rb
          class Bd9 < Formula
            desc "Github Commit Backdater"  
            homepage "https://github.com/scamelot/bd9"
            url "$binary_url"
            version "$version"
            sha256 "$sha256sum"

            def install
              if OS.mac?
                bin.install "bd9-darwin-universal" => "bd9"
              elsif OS.linux?
                bin.install "bd9-linux-x86_64" => "bd9"
              end
            end

            test do
              system "#{bin}/bd9", "-h"
            end
          end
          EOF

    - name: Commit and push Homebrew Formula
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add bd9.rb
        git commit -m "Update Homebrew Formula for version $version"
        git push

    - name: Push Homebrew Formula to scamelot/homebrew-bd9
      run: |
        git clone https://${{ secrets.HOMEBREW_TOKEN }}@github.com/scamelot/homebrew-bd9.git homebrew-bd9
        cp bd9.rb homebrew-bd9/
        cd homebrew-bd9
        git add bd9.rb
        git commit -m "Update bd9 formula to version $version"
        git push
        echo "Build complete!"
